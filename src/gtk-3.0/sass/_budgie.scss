// Help us styling budgie-desktop in this theme !
// code are derived from Arc (NicoHood x fossfreedom version) theme and
// some bits from Adapta, some bits written by me

.budgie-container {
	&, &:backdrop {
		background-color: transparent;
		padding: 0;
	}
}

.budgie-panel {
	&, &:backdrop {
		background-color: if($light-panel == 'false', rgba(black, 0.8), rgba($bg_color, 0.75));
		color: if($light-panel == 'false', $dark_fg_color, $fg_color);
		box-shadow: 0 0 0 1px if($light-panel == 'true', rgba(black, 0.22), rgba(black, 0.9));
		font-weight: bold;

		text-shadow: none;

		.alert { color: $accent_primary; }
	}

	&.transparent {
    background-color: if($light-panel == 'false', rgba(black, 0.3), rgba($bg_color, 0.3));
		box-shadow: 0 0 0 1px if($light-panel == 'true', rgba(black, 0.22), rgba(black, 0.4));

		text-shadow: none;
  }

	button {
		&, &:backdrop {
			@include button(undecorated);
			border-radius: 0;
			border: none;
			box-shadow: none;
			background: none;

			text-shadow: none;
			-gtk-icon-shadow: none;

			color: if($light-panel == 'false', $dark_fg_color, $fg_color);
		}

		.flat label {
			&, &:backdrop {
				color: if($light-panel == 'false', $dark_fg_color, $fg_color);

				text-shadow: none;
			}
		}

		label {
			&, &:backdrop {
				color: if($light-panel == 'false', $dark_fg_color, $fg_color);
				text-shadow: none;
			}
		}

		&:hover {
			background-color: transparent;
			border: none;
			background-image: none;
			transition: none;
		}

		&:active, &:checked {
			&, &:backdrop {
				background-color: transparent;
				background-image: none;
				color: if($light-panel == 'false', $dark_fg_color, $fg_color);
			}

			label {
				&, &:backdrop { color: if($light-panel == 'false', $dark_fg_color, $fg_color); }
			}
		}
	}
}

// end region {
.end-region > widget > widget {
	> box.horizontal {
		// bluetooth tray
		> widget > widget > image {
			&:dir(ltr) { margin: 0 2px 0 -1px; }
			&:dir(rtl) { margin: 0 -1px 0 2px; }

			// night light applet (?)
			min-width: 16px + 8px;
		}

		// volume indicator/tray
		> widget.sound-applet > widget > image {
			min-width: 16px + 8px;
			margin: 0;
		}

		// battery
		> widget > widget > box.horizontal > image,
		box.battery-icon.horizontal > image {
			min-width: 16px + 8px;
		}
	}

	// battery percent label
	box.battery-icon {
		&.horizontal > label.percent-label {
			&, &:backdrop { color: if($light-panel == 'true', $fg_color, $dark_fg_color); } // untested

			font-size: 75%;
			&:dir(ltr) { margin: 0 -6px 0 3px; }
			&:dir(rtl) { margin: 0 3px 0 -6px; }
		}

		&.vertical > label.percent-label {
			&, &:backdrop { color: if($light-panel == 'true', $fg_color, $dark_fg_color); } // untested

			font-size: 75%;
			&:dir(ltr) { margin-right: -2px; }
			&:dir(rtl) { margin-left: -2px; }
		}
	}

	// notification bell icons & user indicator
	> image {
		min-width: 16px + 8px;
	}
}

.budgie-clock-applet {
	label {
		&, &:backdrop { color: if($light-panel == 'false', $dark_fg_color, $fg_color); }
	}
}

@each $panel_pos, $border_pos, $indicator_pos in (top, bottom, 0 3px),
																 								 (bottom, top, 0 -3px),
																 								 (left, right, 3px 0),
																 								 (right, left, -3px 0) {
	.#{$panel_pos} .budgie-panel {
		//border-#{$border_pos}: 1px solid if($light-panel == 'true', rgba(black, 0.4), rgba(black, 0.22));
		margin-#{$border_pos}: 1px;

		button {
			&:hover {
				box-shadow: inset #{$indicator_pos} if($light-panel == 'false', $dark_fg_color, $fg_color);
			}

			&:active, &:checked {
				box-shadow: inset #{$indicator_pos} $accent_primary;
			}
		}
	}
}

button.budgie-menu-launcher {
  padding: 0 2px;

  // i dislike how menu icons in budgie scaled
  // so i use image assets for menu icons (you can disable it by add double slash (//) in image node.
  image {
		//background-image:
		//if($light-panel == 'true',
			//-gtk-scaled(url("assets/budgie-menu-symbolic-light.svg"), url("assets/budgie-menu-symbolic-light@2.svg")),
			//-gtk-scaled(url("assets/budgie-menu-symbolic.svg"), url("assets/budgie-menu-symbolic@2.svg")));
		//background-position: center;
		//background-repeat: no-repeat;
		//background-size: 16px;

		color: if($variant == 'light' and $light-panel == 'false', $dark_fg_color, $fg_color);

		// note: it doesn't work with panel size < 37 !
		//-gtk-icon-transform: scale(0.5);
  }
}

.budgie-panel {
	button.flat.launcher {
		padding: 0;
    border-radius: 0;
    border: none;

		-gtk-icon-shadow: none;

    > image {
      opacity: 0.87;
    }

    &:hover {
      // -gtk-icon-effect: highlight;

      > image { opacity: 1.0; }
    }
    &:active {
      > image { opacity: 1.0; }
    }
    &:checked {
      background-color: transparent;
			background-image: none;
      &:hover { -gtk-icon-effect: highlight; }

      > image { opacity: 1.0; }
    }
  }

  .unpinned button.flat.launcher,
  .pinned button.flat.launcher.running {
    &:hover { -gtk-icon-effect: highlight; }

    > image {
      background-size: 2px 2px;
      background-repeat: no-repeat;
      opacity: 1.0;
    }

    &:hover,
    &:active,
    &:checked {
			background-image: none;
      > image { background-image: none; }
    }
  }
}

@each $position, $_line in (top, 0 3px),
                           (bottom, 0 -3px),
                           (left, 3px 0),
                           (right, -3px 0) {
  .#{$position} .budgie-panel {
    button#tasklist-button,
    button.flat.launcher {
      &:hover {
        box-shadow: inset #{$_line} if($light-panel == 'false', lighten($dark_base_color, 12%), $fg_color);
        background-color: transparent;
        border: none;
      }
      &:active,
      &:checked, {
        box-shadow: inset #{$_line} $accent_primary;
      }
    }

    .unpinned button.flat.launcher,
    .pinned button.flat.launcher.running {
      > image {
        background-image: image($accent_primary);
        background-position: #{$position} center;
      }

			&:hover,
      &:active,
      &:checked {
        box-shadow: inset #{$_line} $accent_primary;
      }
    }
  }
}

// 10.5x icon task list
box:not(.unpinned):not(.pinned) > revealer > button.flat.launcher {
  &:hover,
  &:checked,
  &.running { box-shadow: none; } // unset before drawing indicators

  &:active {
    box-shadow: none;
  }
}

@each $position, $_line in (top, 0 3px),
                           (bottom, 0 -3px),
                           (left, 3px 0),
                           (right, -3px 0) {
  .#{$position} {
    box:not(.unpinned):not(.pinned) > revealer > button.flat.launcher {
      &:not(:checked):hover {
				@if $light-panel == 'true' {
					box-shadow: inset #{$_line} rgba(black, 0.4);
				}
				@else {
					box-shadow: inset #{$_line} rgba(white, 0.4);
				}

        &.running {
	        box-shadow: inset #{$_line} $accent_primary;
        }
      }
    }
  }
}

// Workspace switcher applet
widget > box.workspace-switcher {
	> box.workspace-layout {
		border: 0 solid if($light-panel == 'true', rgba(black, 0.22), rgba(black, 0.4));

    .top &,
    .bottom & {
      &:dir(ltr) { border-left-width: 1px; }

      &:dir(rtl) { border-right-width: 1px; }
    }

    .left &,
		.right & { border-top-width: 1px; }
	}

	widget.workspace-item {
    border: 0 solid if($light-panel == 'true', rgba(black, 0.22), rgba(black, 0.4));

    .top &,
    .bottom & {
      &:dir(ltr) { border-right-width: 1px; }

      &:dir(rtl) { border-left-width: 1px; }
    }

    .left &,
    .right & { border-bottom-width: 1px; }
  }

	widget.workspace-item {
		background-color: if($light-panel == 'true', rgba($base_color, 0.3), rgba($dark_base_color, 0.3));
    &.current-workspace {
			background-color: if($light-panel == 'true', rgba($base_color, 0.85), rgba($dark_base_color, 0.85));
			box-shadow: inset 0 -3px $accent_primary;
		}

		label.workspace-more-label {
			color: if($light-panel == 'true', $fg_color, $dark_fg_color);
		}
	}
}

// Icon tasklist popover
stack.icon-popover-stack {
	box.horizontal > button.flat {
		margin: 5px;
		text-shadow: none;
	}

	grid.horizontal {
		> button.flat.image-button {
			margin: 5px;
			@include button(normal);

			&:hover {
				@include button(hover);
			}

			&:active, &:checked {
				@include button(active);
			}

			&:disabled {
				@include button(insensitive);
			}
		}
	}
}

// Popovers
window.budgie-popover:not(.csd) {
  &.background {
		padding: 2px;
		border-color: if($variant == 'light', rgba(black, 0.22), $borders_color);
		border-style: none;
		border-width: 1px;
		border-radius: 5px;
		background-color: $popover_bg_color;
		background-clip: border-box;

		box-shadow: 0 1px 2px transparentize(black, 0.7),
								0 0 0 1px if($variant == 'light', rgba(black, 0.22), $borders_color);
	}

	> frame.container {
		&,
		> border {
			border-style: none;
			background-color: transparent;
		}
	}

	button {
		@include button(undecorated);
		-gtk-icon-shadow: none;
		text-shadow: none;

		&:hover, &:checked { background-color: $popover_hover_color; }
	}

	// special case, use standard buttons instead flat buttons in some applets
	// especially night light applet
	&.night-light-indicator,
	&.workspace-popover {
		button {
			@include button(normal);

			&:hover { @include button(hover); }
			&:active { @include button(active); }
			&:disabled { @include button(insensitive); }
		}

		spinbutton {
			@extend spinbutton;
		}

		box.workspace-popover-button-box {
			> button.flat {
				@include button(undecorated);
				-gtk-icon-shadow: none;
				text-shadow: none;

				&:hover, &:checked { background-color: $popover_hover_color; }
			}

			> separator.horizontal {
				min-height: 0;
				margin: 0;
				background-color: transparent;
			}
		}

		flowboxchild {
			button.flat {
				@include button(undecorated);
				-gtk-icon-shadow: none;
				text-shadow: none;

				&:hover, &:checked { background-color: $popover_hover_color; }
			}
		}
	}

	&.budgie-menu,
	&.caffeine-popover,
	&.night-light-indicator,
	&.places-menu,
	&.user-menu,
	&.workspace-popover {
		> frame.container { padding: 4px; }
	}
}

.budgie-menu {
	scrolledwindow,
  list,
  row,
  scrollbar { // reset styling
    min-width: 0;
    min-height: 0;
    border: none;
    background: none;
    box-shadow: none;
  }

	entry {
		margin-bottom: 4px;
	}

	scrolledwindow {
		border: 1px solid $borders_color;
		background-color: $base_color;
	}

	row.activatable { // reset background
    padding: 0;
    background-image: none;
    background-color: $base_color;
    color: $fg_color;

		border-left: 0;
		border-right: 0;
		border-radius: 0;

		&:hover { background-color: if(variant == light, transparentize($fg_color, 0.8), transparentize($fg_color, 0.85)); }

		button.flat { background: none; }
	}

	.categories {
		border: 1px solid $borders_color;
		background-color: $sidebar_bg_color; // use sidebar bg

		&:dir(ltr) {
			border-left: 1px solid $borders_color;
			border-right: 0;
		}
		&:dir(rtl) {
			border-left: 0;
			border-right: 1px solid $borders_color;
		}

		button.flat.radio.category-button {
			border-radius: 0;
			border-left: 0;
			border-right: 0;

			text-shadow: none;

			&:hover { background-color: if(variant == light, transparentize($fg_color, 0.9), transparentize($fg_color, 0.95)); }

			&:checked {
				color: $fg_color;
	      background-color: transparent;
	      background-image: linear-gradient(to bottom, rgba(black, 0.11), rgba(black, 0.07));
	      border-image: linear-gradient(to bottom,
	                                    rgba(black, 0.25),
	                                    if($variant == 'light', rgba(white, 0.3), rgba(white, 0.05)))
	                                    1 1 1 1;
	      border-style: solid;
	      border-width: 1px 0;

	      box-shadow: inset 0 1px 0 0 rgba(black, 0.03),
	                  inset 0 -1px 0 0 rgba(black, 0.1);

				&:hover {
		      background-color: lighten($sidebar_bg_color, 1.1%);
		    }
			}
		}
	}
}

// User menu
.user-menu {
	list,
	row { // reset styling
		border: none;
		background: none;
		box-shadow: none;
	}

	row.activatable {
		&:hover, &:selected { background-color: $bg_color; }
	}

	> frame.container > box.vertical row.activatable:first-child {
		button.indicator-item {
			font-weight: bold;
		}
	}
}

// night light popover applet
.night-light-indicator {
	.view-header {
		padding-top: 2px;
		&:dir(ltr) { padding-right: 4px; }
		&:dir(rtl) { padding-left: 4px; }

		label {
			font-weight: bold;
			&:dir(ltr) { padding-left: 4px; }
			&:dir(rtl) { padding-right: 4px; }
		}
	}
}

// Raven
frame.raven-frame > border {
  border-style: none;
  box-shadow: 0 3px 9px 1px transparentize(black, 0.5),
							0 0 0 1px if($variant=='light', transparentize(black, 0.77), transparentize($borders_color, 0.1)); // draws border with box-shadow
}

$raven_borders: ((top, bottom), (bottom, top), (left, right), (right, left));

@each $pos, $b_pos in $raven_borders {
  // Raven borders
  .#{$pos} frame.raven-frame > border {
    margin-#{$b_pos}: 32px;
    border-#{$b_pos}: 0; // deprecated, now we draws border with box-shadow
  }
}

.raven {
  background-color: $bg_color;
  color: $fg_color;
  padding: 0;
  border: none;

  // New: Raven notification view styling
  // NEEDS MOAR TESTING
  // Only affects in new git version
  .raven-notifications-view {
  	row {
  	  &, &:hover, &:active, &:selected, &:selected:hover {
  	  	background-color: transparent;
  	  	box-shadow: none;
  	  }
  	}
  }

  .raven-notifications-group {
  	border: 1px solid $borders_color;
  	padding: 6px;
  	border-radius: 3px;

  	box-shadow: inset 0 1px $top_hilight;

  	&:dir(ltr) { margin-right: 4px; }
  	&:dir(rtl) { margin-left: 4px; }

  	.notification-clone {
  	  &:dir(ltr) { 
  	  	border-left: 2px solid $accent_primary; 
  	  	padding: 0 0 0 8px;
  	  }

  	  &:dir(rtl) { 
  	  	border-right: 2px solid $accent_primary;
  	  	padding: 0 8px 0 0; 
  	  }
  	}
  }

  .raven-header {
    min-height: 26px;

    &:not(.top) {
			margin-top: -6px;
			padding-bottom: 2px;
		}

		&.top {
      padding: 4px 12px;
      color: $fg_color;
			border-bottom: 1px solid $borders_color;

      @include headerbar_fill;
		}

		&.bottom { border-top: 1px solid $borders_color; }
	}

  .raven-background {
    border-style: solid none;
    border-width: 1px;
    border-color: $borders_color;
    background-color: $base_color;
	}

	scrolledwindow > .frame {
		> box.vertical > box.vertical {
			box-shadow: inset 0 -1px 0 0 if($variant == 'light', rgba(black, 0.22), $borders_color);
		}

		box.audio-widget {
			list {
				&.sound-devices row.activatable {
					> box > label {
						&:dir(ltr) { margin-left: 6px; }
						&:dir(rtl) { margin-right: 6px; }
					}
				}
			}

			stackswitcher.linked {
				> button.text-button.radio {
					&:dir(ltr),
					&:dir(rtl) {
						margin-bottom: 6px * 2;
					}

					&:first-child {
						margin-left: 6px * 2;
					}

					&:last-child {
						margin-right: 6px * 2;
					}
				}
			}
		}
	}
}

.powerstrip {
	background-color: $dark_fill;
	box-shadow: inset 0 1px rgba(black, 0.05);
}

calendar.raven-calendar {
  // padding: 3px;
  border-style: none;
  background-color: transparent;

  &:selected {
    border-radius: 2px;
    background-color: $accent_primary;
  }
}

.raven-mpris {
  background-color: rgba($bg_color, 0.8);
  color: $fg_color;
	font-weight: bold;

  label { min-height: 24px; }

  button.image-button {
		@include button(normal);

		@extend %linked;

		&:hover { @include button(hover); }
		&:active { @include button(active); }

		&:disabled {
			color: $osd_insensitive_fg_color;
			@include button(insensitive);
		}
	}
}

// Notifications
.budgie-notification-window {
  background-color: transparent;
  &:backdrop { background-color: transparent; }
}

.budgie-notification {
  .notification-title { font-size: 110%; color: $fg_color; }
  .notification-body { @extend .dim-label; color: $fg_color; }
}

.budgie-osd-window {
  @extend .budgie-notification-window;
}

.budgie-osd {
  @extend .budgie-notification;
  .budgie-osd-text { font-size: 120%; }
}

.budgie-switcher-window {
  @extend .budgie-notification-window;

  &:backdrop { @extend .budgie-notification-window; }
}

.budgie-switcher {
  @extend .budgie-notification;
}

.drop-shadow {
  margin: 5px 9px;
  padding: 3px;
  border-radius: 3px;
  box-shadow:
		inset 0 1px $top_hilight,
		0 3px 3px rgba(0, 0, 0, 0.16),
		0 3px 3px rgba(0, 0, 0, 0.23),
		0 0 0 1px if($variant=='light', transparentize(black, 0.77), transparentize($borders_color, 0.1));
  background-color: $bg_color;
}

%budgie_dialog {
	border-radius: 5px;
	background-color: $bg_color;
	box-shadow: inset 0 1px $top_hilight;

  decoration { border-radius: 4px; }
}

.budgie-session-dialog {
  @extend %budgie_dialog;

  label:not(:last-child),
  .dialog-title { font-size: 120%; }
}

.budgie-session-dialog,
.budgie-polkit-dialog {
  .linked.horizontal > button {
    padding: 2px;
    border-top: 1px solid $borders_color;
    border-radius: 0;

    // Workaround for suggested and destructive action buttons
    // which is used in some areas
    @each $b_type, $b_color in (suggested-action, $accent_primary),
                             (destructive-action, $destructive_color) {
			&.#{$b_type} {
				border-color: if($variant == 'light', darken($b_color, 20%), darken($b_color, 45%));
			}
		}

		margin-bottom: 6px;

    &:first-child {
			border-top-left-radius: 3px;
			border-bottom-left-radius: 3px;
			margin-left: 6px;
		}

    &:last-child {
			border-top-right-radius: 3px;
			border-bottom-right-radius: 3px;
			margin-right: 6px;
		}
  }
}


.budgie-polkit-dialog {
  @extend %budgie_dialog;

  .message { color: $fg_color; }

  .failure { color: $destructive_color; }
}

.background.csd.budgie-run-dialog {
  @extend %budgie_dialog;

  background-color: $bg_color;

  entry.search {
		margin: 10px;
		//border-radius: 3px;
	}

	scrolledwindow {
		background-color: $base_color;
		border: 1px solid $borders_color;
		border-radius: 3px;

		margin: 0 10px 10px;
	}
}

.budgie-panel > box > widget > separator {
  background-color: if($light-panel == 'false', rgba(white, 0.3), rgba(black, 0.22));
}

.budgie-calendar-applet {
	calendar {
  	background-color: transparent;
  	border-color: transparent;
  	padding: 1px;

		&:selected {
			background-color: $accent_primary;
		}
	}

	label {
		&, &:backdrop { color: if($light-panel == 'false', $dark_fg_color, $fg_color); }
	}
}
